16.Qt对象间的父子关系
	
	(1)Qt对象存在父子关系
		
		1.每一个对象都保存指向其子对象的指针。
		
		2.每一个对象都有一个指向其父对象的指针。
		
	(2)如何指定Qt对象的父对象
		
		1.其父对象会在子对象链表中加入该对象的指针。
		
		2.该对象会保存指向其父对象的指针。
			
			QObject *p = new QObject();
			QObject *c1 = new QObject();
			
			c1->setParent(p);//设置父对象。
			c1->parent();//调用父对象。
		
		3.父对象保存子对象指针的链表：
			
			typedef QList<QObject*> QObjectList;
			
			const QObjectList& QObject::children() const
				通过children()调用对应链表。
	
	(3)Qt对象销毁时
		
		1.将自己从父对象的Children List移除。
		
		2.将自己的Children List中的所有对象销毁。
		
		注意：
		使用Qt开发时，除了注意内存泄露，还有时刻关注对象是否可能被多次销毁的问题。
		
	(4)计算器中实例
		
		1.在计算器中，按钮QPushButton和文本框QLineEdit都与QCalculatorUI对象有组合关系，存在于UI的子对象链表中。
		
17.对话框及其类型
			
	(1)对话框概念
		
		1.对话框是与用户进行简短交互的顶层窗口。
		
		2.QDialog是Qt中所有对话框窗口的基类。
		
		3.QDialog继承于QWidget是一种容器类型的组件。
		
	(2)QDialog的意义
		
		1.作为一种专用的交互窗口存在。
		
		2.不能作为子部件嵌入其他容器中。
		
		3.是定制了窗口式样的特殊的QWidget。
		
	(3)对话框类型
		
		1.模态对话框(QDialog::exec())
		
			-显示后无法与父窗口进行交互。
			
			-是一种阻塞式的对话框调用方式。
			
			-用于必须以来用户选择的场合(80%)，如：消息提示、文件选择、打印设置等。
		
		2.非模态对话框(QDialog::show())
		
			-显示后独立存在可以同时与父窗口进行交互。
			
			-是一种非阻塞式的对话框调用方式。
		
			-用于特殊功能设置的场合(20%)，如：查找操作、属性设置等。
		
	(4)对话框创建小技巧
		
		1.在栈上创建模态对话框是最简单常用的方式。
		
		2.一般情况下非模态对话框需要在堆上创建。
		
		3.Qt中可通过QDialog::setModal函数可以在堆中创建混合特性的对话框。
			
			-运行机理上与非模态对话框相同。
			-表现形式上与模态对话框相同。
			
			QDialog* dialog = new QDialog(&parent);		
			dialog->setModal(true);
		
		4.非模态对话框需要指定Qt::WA_DeleteOnClose属性。即，在关闭对话框同时删除对话框对象(释放内存)。
		
			QDialog* dialog = new QDialog(&parent);		
			dialog->setAttribute(Qt::WA_DeleteOnClose);
		
	(5)对话框的返回值
		
		1.只有模态对话框才有返回值的概念。
		
		2.模态对话框的返回值用于表示交互结果。
		
		3.QDialog::exec()的返回值为交互结果。
			
		-void QDialog::done(int i)
			关闭对话框并将参数作为交互的结果。可用于消息处理函数。
		
		-QDialog::Accepted
			用户操作成功。
		
		-QDialog::Rejected
			用户操作失败。
		
18.登录对话框实例分析
			
	(1)登录对话框需求分析

		1.可复用软件部件。
		
		2.获取用户名和密码。
		
		3.附加需求：随机验证码。
		
	(2)获取用户输入的用户名和密码
		
		1.可通过附加的成员变量和成员函数完成不同对话框间的数据传递。
		
	(3)进一步开发
		
		1.当账号或密码为空时提示错误。
		
		2.随机验证码。
			
			-当验证码输入错误时进行提示。
			
			-验证码随机刷新。
		
	(4)公式
		
		m_user = UserEdit.text().trimmed();
			将用户账号的前后空格去除。
		
		m_pwd = PwdEdit.text();
			用户密码可以存在空格。
			
		QLineEdit::setEchoMode(QLineEdit::Password);
			用星号显示文本框内容。
		
	(5)总结
		
		1.登录对话框作为可复用的软件部分开发。
		
		2.对话框之间通过成员变量和成员函数传递数据。
		
			-将用户数据保存在私有成员变量中。
			
			-通过公有成员函数进行数据传递。
		