14.线性表的本质和操作
	
	(1)线性表(List)的表现形式
		
		1.零个或多个数据元素组成的集合。
		
		2.数据元素在位置上是有序排列的。
		
		3.数据元素的个数是有限的。
		
		4.数据元素的类型必须相同。

	(2)线性表(List)的抽象定义
		
		1.具有相同类型的n(大于等于0)个数据元素的有限序列。
		
		2.ai是表项(数据元素)，n是表长度。

	(3)性质
		
		1.a0为线性表的第一个元素，只有一个后继。
		
		2.an-1为线性表的最后一个元素，只有一个前驱。
		
		3.其他元素ai既有前驱，又有后继。
		
		4.直接支持逐项访问和顺序存取。

	(4)常用操作
	
		1.将元素插入线性表。
		
		2.将元素从线性表中删除。
		
		3.获取目标位置处元素的值。
		
		4.设置目标位置处元素的值。
		
		5.获取线性表的长度。
		
		6.清空线性表。

15.线性表的顺序存储结构
	
	(1)顺序存储结构的元素获取操作
		
		1.判断目标位置是否合法。
		
		2.用数组访问方式直接获取数据元素。

	(2)顺序存储结构的元素插入操作
		
		1.判断目标位置是否合法。
		
		2.将目标之后的所有元素后移一个位置。
		
		3.将新元素插入目标位置。
		
		4.线性长度加1。

	(3)顺序存储结构的元素删除操作
		
		1.判断目标位置是否合法。
		
		2.将目标位置后的所有元素前移一个位置。
		
		3.线性表长度减1。

16.顺序存储结构的抽象实现
	
	(1)设计要点
		
		1.抽象类模板，存储空间的位置和大小由子类完成。
		
		2.实现顺序存储结构线性表的关键操作(增、删、查、改)。
		
		3.提供数组操作符，快速获取元素。

17.StaticList和DynamicList
	
	(1)StaticList设计要点
	
		1.使用原生数组作为顺序存储空间。
		
		2.使用模板参数决定数组大小。

	(2)DynamicList设计要点
		
		1.申请连续堆空间作为顺序存储空间。
		
		2.动态设置顺序存储空间的大小。
		
		3.保证重置顺序存储空间时的异常安全性。
			
			-不泄露资源
			-不破坏数据

18.顺序存储线性表的分析
	
	(1)线性表效率

		1.与线性表元素种类有关。
		
		2.顺序存储线性表的插入和删除操作存在重大效率隐患。

	(2)对于容器类型的类
		
		1.应该避免拷贝构造和赋值操作。防止内存被多次释放等问题。

	(3)问题延伸
		
		1.顺序存储线性表可能被当成数组误用。
		
		2.工程开发中可以考虑使用数组类代替原生数组使用。






































































