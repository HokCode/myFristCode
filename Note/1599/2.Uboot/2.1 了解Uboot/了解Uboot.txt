1.uboot存在的意义
	
	(1)计算机系统的主要部件
		
		1.计算机系统就是有CPU来做核心运行的系统。如：PC机(台式机+笔记本)、嵌入式设备(手机、平板、游戏机)、单片机设备(家用电器)。

		2.计算机系统的主要核心部件：CPU、外部存储器(Flash、硬盘)、内部存储器(DDR、SDRAM、SRAM)。

	(2)PC机启动过程
		
		1.典型PC机部署：BIOS程序部署在PC机主板上(出厂时预制)；操作系统部署在硬盘上；内存在掉电时无作用；CPU在掉电时不工作。

		2.启动过程：PC上电后执行BIOS程序(PC的BIOS本质是NorFlash)负责初始化DDR内存和硬盘，然后从硬盘上将OS镜像读取到DDR中并跳转到DDR中去执行OS。

	(3)典型嵌入式linux系统启动过程
		
		1.部署和启动都是参考PC机，但设备上有一些差别。

		2.典型嵌入式部署：uboot程序，部署在flash(能作为启动的flash)、OS部署在Flash(代替硬盘)、内存和CPU与PC机相同。

		启动过程：嵌入式系统上电后先执行uboot，uboot负责初始化DDR和Flash，然后将OS从Flash中读取到DDR中，启动OS。

	(4)android系统启动过程
		
		1.和linux系统几乎一样，但是在内核启动后加载根文件系统后不同了。

	分析：可认为启动分2个阶段：
		
		1.uboot到OS启动；
		2.OS启动后到rootfs(根文件系统)到命令行执行。

	(5)总结uboot工作
		
		1.启动操作系统内核。
		2.部署整个计算机系统。如，把Flash中的OS读取到DDR。
		3.操作Flash等板上硬件的驱动。
		4.提供命令行界面供人操作。

2.再说uboot
	
	(1)uboot来源
	
		1.uboot是SourceForge上的开源项目。
		2.uboot是一个德国人发起，由整个网络感兴趣的人共同维护发展而来的一个bootloader。

	(2)发展历程
		
		1.进过多年发展，现在大部分嵌入式设备都会默认使用uboot来作为bootloader。

	(3)uboot版本
		
		1.uboot的核心部分没变化，越新的版本支持的开发板越多。

	(4)uboot的可移植性的正确理解
		
		1.uboot：universal bootloader，通用启动代码。所以uboot具有可移植性。

3.uboot解决的问题
	
	(1)自身开机直接启动
		
		1.一般SoC都支持多种启动，如：SD卡、NorFlash、NandFlash等等。uboot能开机启动，必须根据具体的SoC的启动设计来设计uboot。
		
		2.uboot必须进行和硬件相对应的代码级别进行更改和移植才能保证可以从相应的启动介质启动。

	(2)能够操作系统内核启动并给内核传参
		
		1.uboot的终极目标就是启动内核。
		
		2.linux内核在设计时，设计为可以传参。在uboot中事先会有给linux准备的一些启动参数放在内存中特定位置，内核启动后会到特定位置去取uboot传给他的参数并进行解析。

	(3)能提供系统部署功能
		
		1.uboot必须能够被人借助而完成整个系统(uboot、kernel、rootfs)在Flash上的烧录下载工作。

		2.就像刷机时用fastboot功能将各种镜像烧录到iNand中，然后从iNand启动。
		
	(4)能进行SoC级和板级硬件管理
		
		1.uboot中初始化了一部分硬件，因为uboot完成一些任务必须让这些硬件工作。如：iNand、LCD(显示进度条)、串口(提供操作界面)；还有：网卡(如果uboot要实现网络功能)。

		2.SoC级：内部外设。板级：SoC外面开发板上的硬件(如，网卡、iNand)。

	(5)uboot的“生命周期”
		
		1.uboot本质是一个裸机程序(单线程)，不是操作系统。uboot开始运行时，SoC会单纯运行uboot，别的程序不会同时运行；uboot结束运行后就无法再回到uboot了(除非重启系统)。

		2.uboot的入口就是开机自动启动；唯一出口是启动内核。uboot在入口和出口之间执行其他任务(如，烧录系统)，但启动内核命令一执行uboot就结束了。

	总结：uboot的最终目标就是为了最后启动内核。

4.uboot的工作方式
	
	(1)裸机程序镜像uboot.bin
		
		1.uboot的本质就是一个裸机程序。但是uboot大于16KB，一般在180k~400k之间。

		2.uboot是一个开源项目，由若干个.c和.h文件组成，配置编译生成一个uboot.bin文件，这就是uboot的镜像文件。

		3.uboot运行时会被加载到内存中然后一条一条指令的拿去给CPU运行。

	(2)uboot的命令行shell界面
		
		1.普通裸机程序是直接运行的。
		
		2.有些程序需要和人进行交互，所以这种程序中实现了一个shell。uboot也实现了一个shell，与linux中的终端shell很类似，但命令集不同。

	(3)uboot的2个关键点：命令和环境变量
		
		1.uboot启动后大部分时间和工作都在shell下完成的。如：部署系统(烧录)用fastboot、设置环境变量、启动内核。

		2.命令就是uboot的shell中可以识别的命令。

		3.uboot的环境变量与操作系统的环境变量的原理和工作方式类似。

		4.环境变量可以理解为系统的全局变量，程序可调用或更改环境变量(一般只调用)。系统默认自带一部分环境变量，如：PATH；也有一部分是程序员添加的，程序认识，系统不认识。
		
		5.系统或程序员可在程序运行时通过读取环境变量来指导程序运行，使程序更灵活。如：开机等待的bootdelay。

		注意：环境变量与全局变量区别：环境变量被存储在flash的一块专门的环境变量分区，一旦在程序保存了该环境变量，下次开机时环境变量的值依然是上一次保存的值。

