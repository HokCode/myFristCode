1.16

1.shell定义
		
	(1)壳与封装
			
		1.在计算机中提到的shell指的是用户操作接口。
		
		2.因为计算机程序很复杂，里面的实现和外面的调用必须分开。接口本质就是对内部复杂的内部实现封装。
	
	(2)程序或操作系统的用户接口
		
		1.操作系统运行后会给用户提供一个操作界面，这个界面就叫做shell。用户可以通过shell调用操作系统内部的复杂实现。
	
		2.shell编程就是在shell层次上进行编程。如：linux的脚本编程、windows的批处理。
	
	(3)两种shell：GUI和cmdline
		
		1.GUI(图形用户界面)，操作简单、易学易用。适合使用电脑工作的用户。
	
		2.cmdline(命令行界面)，难度大不容易学，但可以进行方便的shell编程。如：linux的终端和windows的cmd。适合做开发的人。
	
	(4)shell运行原理
	
		1.命令行shell其实就是个死循环。包含3个互为串联模块：命令的接收、解析、执行。
	
		2.命令行有一个标准命令集，用户操作时必须知道对应操作的命令才能实现，不能随便输入。
	
		3.用户输入的命令是以回车会结束的。
	
	(5)常见的shell
		
		1.uboot，裸机程序构成的shell。
	
		2.linux终端和windows的cmd是操作系统下的命令行shell。如：windows图形界面、ubuntu图形界面、android的图形界面。
	
			网页类型的shell。如：路由器，里面内置了一个嵌入式web服务器。
	
2.写简单shell
		
	(1)使用printf和scanf做简单的输入回显。
	
	(2)定义简单命令集。(数组)
	
3.将建议shell移植到开发板

	(1)只用自己的函数，不用库函数
	
	(2)printf和scanf函数的移植(本质是自己写putc和getc函数)
		
		1.puts和putchar函数相对简单。
		
		2.gets和getchar是从windows中的SecureCRT终端输入字符串到裸机程序中。要注意：
			
			1.用户输入回显问题
			
			2.用户输入回车问题
			
				在getchar中解决：接收到'\r'时返回'\n'。
			
			3.用户按退格键问题
	
4.定义标准命令集及解析
			
	cmd_parser和cmd_exrc。
	
5.添加第一个命令led。
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	