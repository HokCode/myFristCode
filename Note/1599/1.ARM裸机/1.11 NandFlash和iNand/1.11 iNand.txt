11.
	6.iNand	
		
		(1)iNand/eMMC/SDCard/MMCCard的关联
			
			1.最早出现的是MMC卡，卡片式结构，按照MMC协议设计。
			
			2.SD卡后出现，兼容MMC协议，较MMC在写保护、速率、容量等方面有一些改进。
			
			3.iNand/eMMC在SD卡的基础上发展，将SD卡芯片化。解决卡可能出现的接触不良等问题，便于设备迷你化。
			
			4.iNand和eMMC的关联：eMMC是协议；iNand是Sandisk公司符合eMMC协议的一种芯片系列。
			
		(2)iNand/eMMC的结构框图及其与NandFlash的区别
			
			1.iNand内部也是由存储系统和接口电路构成，但接口电路功能与NandFlash不一样。
			
			2.iNand接口电路很复杂，功能很健全：
			
			(1)提供eMMC接口协议，和SoC的eMMC接口通信对接。
			(2)提供块的ECC校验相关的逻辑，iNand可以自己完成存储系统的ECC功能，SoC可以不用写代码进行ECC相关操作。 			
			(3)iNand芯片内部使用MLC Nand颗粒，所以性价比很高。
			(4)iNand接口电路还提供了Cache机制，所以操作速度更快。
			
		(3)iNand/eMMC物理接口和SDCard物理接口的区别	
			
			1.S5PV210本身支持4通道的SD/MMC，在X210中实际是在SD/MMC0通道接了iNand芯片，而在SD/MMC2接了SD卡(SD/MMC3也接了SD卡)。
			
			2.对比可知，iNand和SD卡接线几乎一样，但是SD卡的io线有4根，iNand的io线有8根。
			
			结论：实际操作iNand芯片时和操作SD卡时，物理接线和软件操作协议几乎一样。iNand/eMMC其实就是芯片化的SD/MMC卡。
			
	7.SD卡/iNand操作
		
		(1)硬件接口：DATA、CLK、CMD
		
			1.iNand的IO线有8根，支持1、4、8线并行传输模式；SD卡的IO线有4根。
			2.CMD线用来传输命令，CLK线用来传输时钟信号。	
			3.工作时主机SoC通过CLK线传输时钟信号给SD卡/iNand芯片，说明SD/iNand是同步的，它们的工作速率是由主机给它的CLK频率决定的。
			
		(2)命令响应的操作模式
			
			1.SD协议事先定义了很多标准命令(CMD0、CMD1)，每个命令都有它的作用和使用条件和对应的响应。SD卡工作的时候就是一个一个的命令周期组合起来的。
			在一个命令周期中，主机先发送CMD给SD卡，然后SD卡解析这个命令并执行这个命令。最后SD卡根据结果回发给主机SoC一个响应。有些命令不需要响应，这时SD卡不会给主机回发响应，主机也不用等待响应。
			
		(3)SD/iNand卡体系结构图
			
			1.SD卡内部有一个接口控制器，这个控制器类似于一个单片机，这个单片机的程序功能就是通过CMD线接收并执行命令码，然后回发响应。单片机以上操作都是遵循SD协议。这个MCU同时可以控制SD卡内部的存储单元，读写存储单元。		
			
		(4)SD/iNand内部的寄存器	
			
			RCA(relative_address,相对地址寄存器)。实际上SD卡内部每个存储单元的地址都是使用相对地址的。相对地址由SD卡自己决定，存放在RCA寄存器中。
			
		(5)SoC的SD/MMC/iNand控制器简介
			
			1.不同的SoC在SD/MMC/iNand等支持方面有差异，但是都是通过内部提供SD卡控制器来支持的。
			
	8.iNand代码分析1
		
		(1)命令码CMD和ACMD
			
			1.SD卡工作在命令+响应的模式下
			
			2.SD协议的命令分2种：CMDx和ACMDx。	
				
				CMD是单命令命令，单独发一个CMD即可表示一个意思。
				ACMD要发2个CMD加起来表示一个意思。如：ACMDx = CMDy+CMDz(y一般是55)
			
		(2)卡类型识别
			
			1.MCC协议、SD协议、eMMC协议都有一定的兼容性，但是也会有一些差别。
			
			2.不同版本的卡内部协议不同，所以对SoC发出的卡识别命令响应也不同。SoC根据卡的不同响应判定卡的版本。
			
		(3)卡状态
			
			1.SD卡内部的接口控制器其实是一个状态机。SD卡任何时候都有一种状态，如：空闲状态、准备好状态、读写状态、出错状态等，都是事先定义好的。
			在某种状态下能够接受的命令是一定的，接收到命令后会执行一定的操作，然后根据操作结果会跳转为其他状态。如果主机发的命令和当前状态不符，状态机就不响应。
			
		(4)卡回复类型
			
			1.卡回复有R1、R2、R1B等8种类型，每种卡回复类型都有自己的解析规则。卡在特定状态下响应特定命令、回复哪种响应都是SD协议事先规定好的。
			
	9.iNand代码分析2
		
		(1)Linux内核风格寄存器定义
			
			1.定义一个基地址，然后定义要访问的寄存器和基地址之间的偏移量。通过基地址+偏移量就可得到寄存器地址。
			
		(2)SD卡/iNand相关的GPIO初始化
			
			1.GPG0相关的GPIO初始化。
			2.主机SD卡控制器时钟设置。
			
		(3)SD卡时钟设置
			
			1.SD卡本身工作需要时钟，但是自己没有时钟发生单元。所以要依靠主机SoC的控制器通过SD接口中的CLK线传一个时钟过来给SD卡内部使用。
			
			2.因为刚开始通信时，主机不清楚SD卡属于哪个版本(高低版本的SD卡读写速率不同，低版本不能工作在高版本速率下)，所以先给SD卡发400KHz的低速率时钟。在后面识别SD卡版本后，再进一步给SD卡一个合适的时钟。
			
			
			