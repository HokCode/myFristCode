1.7
	7.S5PV210串行通信编程实战
		
		(1)整个程序分析
			
			1.串口初始化(uart_init)
				
				(1)初始化串口的Tx和Rx引脚所应对的GPIO，通过查原理图可只分别对应GPA0_1和GPA0_0。
				
					GPA0CON(0xE0200000),要把其bit[3:0]=0b0010,bit[7:4]=0x0010.
					
				(2)初始化关键寄存器(参考数据手册)
					
					UCON0  = 0x5	//发送和接收都是轮询模式(polling mode)
					ULCON0 = 0x3	//0校验位、1停止位、8数据位
					UMCON0 = 0x0	//禁止modem、AFC(流控)		
					UFCON0 = 0x0	//FIFO模式设置，暂时禁止。
					
				(3)波特率的计算与设置(参考数据手册)
					
					1.DIV_VAL = (PCLK/(bps * 16))-1
						
						PCLK = 66MHz/66.7MHz(误差范围内差异不大，后者相对准确。)
						bps = 115200
						结果：34.8/35.18
						
					2.UBRDIV0 = 34/35	(DIV_VAL整数部分)	
					
					3.UDIVSLOT0 = 0xDFDD/0x0888 ((num of 1's in UDIVSLOTn)/16 = DIV_VAL小数部分，再查参考表)			
			
			2.串口发送函数，发送1个字节(uart_putc)
			
				原理：把1个字节丢进发送缓冲区(UTXHn)UART Transmit Buffer Register(Holding Register & FIFO Register)
					
				(1)直接把要发的数据写入UTXHn bit[7:0]。
					
				(2)不断读取状态寄存器UTRSTATn的发送缓冲区空位
					
					UTRSTATn bit[1]：0 = not empty, 1 = empty.
	
				代码：
					
					while(!(rUTRSTATn & (1<<1)));	//CPU等待发送缓存区为空。
					rUTXHn = c;
	
			3.串口接收函数，接收1个字节
			
				寄存器为 URXHn( UART Recive Buffer Register (Holding Register & FIFO Register))原理去发送类似。
				
				(1)直接把要发的数据写入URXHn bit[7:0]。
					
				(2)不断读取状态寄存器UTRSTATn的接收缓冲区空位
					
					UTRSTATn bit[0]：0 = not empty, 1 = received.
				
					while(!(rUTRSTATn & (1<<0)));	//CPU等待发送缓存区为空。
					return (rURXHn & 0x0f);
			
		(2)C语言中定义寄存器的宏	
			
			例子：设置GPA0
				
				#define GPA0CON 0xE0200000		
				#define rGPA0CON (*(volatile unsigned int *)GPA0CON)
			
				直接使用rGPA0CON即可。
	