1.4
	
	3.交叉编译工具链的安装
	
		(1)Windows中安装软件
			
			使用安装包，安装包解压后有2中情况：
			
				1.安装文件(.exe .msi)，双击进行安装。
				
				2.绿色软件(免安装软件)，直接有exe可以双击执行。
				
		(2)linux中装软件
			
			1.在线安装。如：ubuntu中使用 apt-get install vim 来安装vim软件。
		
			2.自己下载安装包安装。这种方法缺陷是可能不知道下载的安装包与系统是否匹配。
			
			3.源代码安装。把软件的源代码在linux系统下编译。
			
			
		(3)交叉编译工具链
				
			选择交叉编译工具链要与目标平台(SoC)尽量匹配。
			
			步骤：
				
				1.安装包从windows共享文件夹弄到linux中去。
				
				2.为了在以后使用时更好地找到软件，所以一般安装在linux的 usr/local中(自行创建arm文件夹)。
					
					/bin：放置一些系统自带用户使用的应用程序(eho、ls)。
					
					/sbin：存放系统自带的系统管理方面的应用程序。(fdisk格式化)。
					
				3.复制(cp)后解压，输入：tar -jxvf arm-2009q3.tar.bz2。
			
				4.程序在bin目录下，安装完毕，程序可以直接执行。
			
		(4)安装后的测试
			
			到安装目录下执行arm-none-linux-gcc-linux-gcc -v 。执行后得到的信息中看到"gcc version 4.5.1"版本号字样，即表示安装成功。
				
	4.交叉编译工具链
		
		(1)环境变量的意义
			
			环境变量就是操作系统的全局变量。每一个环境变量对操作系统来说都是唯一的，名字和所代表的意义也是唯一的。
			
			PATH：这个环境变量是系统自带的，它的含义是系统在查找可执行程序时会搜索的路径
			
		(2)将工具链导出到环境变量	
			
			export PATH=$PATH:(工具链目录)	//$PATH指以前的PATH。:后面指加一个目录地址。
			
			echo $PATH
			
			分析缺陷：这样每次打开新的命令行窗口都要重新导出，很麻烦。
			
			解决方案:
				
				在 ~/.bashrc中，添加 export PATH=$PATH:(工具链目录) 即可。
				
				~:	当前用户的宿主目录(.bashrc是隐藏文件)。
					
				.bashrc文件作用:	每次用户登打开终端的时候，文件的内容都会被自动执行。可以重新打开终端或手工执行(source .bashrc)再输入  echo $PATH验证。
			
			分析缺陷2：不同用户也要重新导出。解决方案看下文
			
		(4)为工具链创造arm-linux-xxx符号链接
			
			例子：
				
				在安装目录下输入：
					
					ln arm-none-linux-gnueabi-gcc -s 便捷名 
			
				以后可直接用便捷名代替使用。
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			