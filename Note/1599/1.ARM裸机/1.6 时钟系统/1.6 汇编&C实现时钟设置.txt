1.6
	6.汇编实现时钟设置代码
		
		(1)时钟设置步骤
			
			1.设置各种时钟开关，暂时不适用PLL。
				
				让外部24MHz原始时钟直接过去，绕过APLL那条路
			
			2.设置锁定时间，使用默认值(0x0FFF)即可
				
				设置PLL后，时钟从Fin提升到目标频率时，需要一定的时间，即锁定时间。可以设置更长的时间(0xFFFF)
	
			3.设置分频系统
				
				由此决定由PLL出来的最高时钟如何分频得到各个分时钟。
				
			4.设置PLL
			
				设置PLL的倍频系数。我们按照默认设置值设置ARMCLK为 1GHz。
				
			5.设置各种时钟开关，打开PLL。
			
		(2)CLK_SRC寄存器的设置分析(参照P361)
			
			CLK_SRC是用来设置MUX开关的。先将CLK_SRC0的bit0(APLL)和bit4(MPLL)设置为0，表示APLL和MPLL暂时都不启用。
			
		(3)CLK_LOCK寄存器的设置分析
			
			设置PLL锁定延时的。官方推荐值为0x0FFF，我们设置为0xFFFF。
			
		(4)CLK_DIV寄存器的设置分析
			
			例子：
			
				分析：CLK_DIV0 0x14131440
				
				PCLK_PSYS = HCLK_PSYS / 2	(30:28)
				
				HCLK_PSYS = MOUT_PSYS / 5	(27:24)
			
				PCLK_DSYS = HCLK_DSYS / 2	(22:20)
				
				HCLK_DSYS = MOUT_DSYS / 4	(19:16)
			
				PCLK_MSYS = HCKL_MSYS / 2  	(14:12)
			
				HCLK_MSYS = ARMCLK / 5		(10:8)	
			
				ARMCLK = MOUT_MSYS / 1 		(2:0)
			
	7.汇编实现时钟设置代码2		
			
		(1)PLL倍频的相关计算
			
			1.只设置APLL和MPLL两个，其他先不设置。
			
			2.APLL和MPLL设置的关键都是M、P、S三个值。一般先设置成官方数据手册提供的推荐值。
		
		分析:分析代码分贝算出倍频参数、MUX选项、分频参数即可算到最后的参考值。
			
	8.C语言实现时钟设置代码
		
		(1)虽然语法写法不同，但是核心相同。
		
		(2)位运算更加简单。

			