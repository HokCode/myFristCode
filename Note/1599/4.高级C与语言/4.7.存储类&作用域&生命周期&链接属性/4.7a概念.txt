4.7
	1.C语言运行规则概念解析
		
		(1)存储类
			
			1.存储类就是存储类型，也就是描述C语言变量在何种地方存储。
			
			2.内存有多种管理方法：栈、堆、数据段、bss段、.text段(代码段)……一个变量的存储类属性就是描述这个变量存储在何种内存段中。
				
				譬如：局部变量分配在栈上，所以它存储类就是栈。
			
		(2)作用域
			
			1.描述这个变量起作用的代码范围。
			
				当两个同名变量作用域重叠时，在重叠部分，以作用域小的那个变量为准。
				
			2.基本来说，C语言变量的作用域规则是代码块作用域。这个变量起作用的范围是当前代码块(用大括号{}来看范围)。所以变量的定义总是在最前面。
			
		(3)生命周期
			
			1.生命周期：描述这个变量什么时候诞生(分配内存空间)及什么时候死亡(内存空间被回收)。
			
		(4)链接属性
			
			1.程序从源代码到最终可执行程序，经过的过程(简化):编译->链接。
			
			2.编译就是把把源代码编译成(简化) .o 目标文件，.o文件里面有很多符号(函数名、变量名)和代码段、数据段、bss段等分段。运行时变量名、函数名能够和相应的内存对应起来，靠符号来做链接的。
			
			3. .o目标文件链接生成最终可执行程序的时候，其实就是把符号和相对应的段链接起来。
			
				C语言中符号有三种链接属性：外链接属性、内链接属性、无链接属性。

	2.linux下C程序的内存印象
		
		(1)代码段(文本段、.text)、只读数据段
		
			1.代码段：对应着程序中的代码(函数)。
			2.只读数据段：就是在程序运行期间只能读不能写的数据。const修饰的常量有可能存在于只读数据段(const常量的实现方法在不同平台是不一样的，linux就是放在普通数据段)。
			
		(2)数据段、bss段
			
			1.数据段：显式初始化为非0的全局变量、显式初始化为非0的static局部变量。
			
			2.bss段：显式初始化为0或未显式初始化(默认为0)的全局变量、显式初始化为0或未显式初始化(默认为0)的static局部变量。
			
		(3)堆：malloc free

		(4)文件映射区：给操作文件预留的空间。
			进程打开文件后，将文件的内容从硬盘读到进程的文件映射区，以后就可以直接在内存中操作这个文件，读写完保存时，再将内存中的文件写到硬盘中去。
			
		(5)栈：局部变量分配在栈上。函数调用传参过程。

		(6)内核映射区
			
			1.将操作系统内核程序映射到这个区域了。
			
			2.内核的空间地址是唯一的。
			
		(7)OS(操作系统)下和裸机下C程序加载执行的差异
			
			1.C语言的运行需要一定的环境(外部协助)，这段协助的代码叫加载运行代码(构建C运行时环境的代码，在操作系统下会自动添加到程序上)。
			
			2.这段代码的作用：给全局变量赋值、清bss段(把bss段的变量赋值为0)。
			
			
			3.但是在裸机下要程序员自己写这一段代码
			
	
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			