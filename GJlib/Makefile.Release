#############################################################################
# Makefile for building: GJlib
# Generated by qmake (2.01a) (Qt 4.7.4) on: ?? 3? 11 13:14:23 2018
# Project:  GJlib.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"d:\QT\QT\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -Wl,-s -Wl,-subsystem,console -mthreads
LIBS        =         
QMAKE         = d:\qt\qt\bin\qmake.exe
IDC           = d:\QT\QT\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = main.cpp \
		exception.cpp \
		object.cpp 
OBJECTS       = release/main.o \
		release/exception.o \
		release/object.o
DIST          = 
QMAKE_TARGET  = GJlib
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = GJlib.exe
DESTDIR_TARGET = release\GJlib.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)

qmake:  FORCE
	@$(QMAKE) -spec d:\QT\QT\mkspecs\win32-g++ -o Makefile.Release GJlib.pro

dist:
	$(ZIP) GJlib.zip $(SOURCES) $(DIST) GJlib.pro d:\QT\QT\mkspecs\qconfig.pri d:\QT\QT\mkspecs\modules\qt_webkit_version.pri d:\QT\QT\mkspecs\features\qt_functions.prf d:\QT\QT\mkspecs\features\qt_config.prf d:\QT\QT\mkspecs\features\exclusive_builds.prf d:\QT\QT\mkspecs\features\default_pre.prf d:\QT\QT\mkspecs\features\win32\default_pre.prf d:\QT\QT\mkspecs\features\release.prf d:\QT\QT\mkspecs\features\debug_and_release.prf d:\QT\QT\mkspecs\features\default_post.prf d:\QT\QT\mkspecs\features\win32\default_post.prf d:\QT\QT\mkspecs\features\build_pass.prf d:\QT\QT\mkspecs\features\win32\console.prf d:\QT\QT\mkspecs\features\win32\rtti.prf d:\QT\QT\mkspecs\features\win32\exceptions.prf d:\QT\QT\mkspecs\features\win32\stl.prf d:\QT\QT\mkspecs\features\shared.prf d:\QT\QT\mkspecs\features\warn_on.prf d:\QT\QT\mkspecs\features\win32\thread_off.prf d:\QT\QT\mkspecs\features\resources.prf d:\QT\QT\mkspecs\features\uic.prf d:\QT\QT\mkspecs\features\yacc.prf d:\QT\QT\mkspecs\features\lex.prf d:\QT\QT\mkspecs\features\incredibuild_xge.prf d:\QT\QT\mkspecs\features\include_source_dir.prf  RESOURCES FORMS IMAGES YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\main.o release\exception.o release\object.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 



####### Compile

release/main.o: main.cpp exception.h \
		object.h \
		Smartpoint.h \
		List.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/exception.o: exception.cpp exception.h \
		object.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\exception.o exception.cpp

release/object.o: object.cpp object.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\object.o object.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

